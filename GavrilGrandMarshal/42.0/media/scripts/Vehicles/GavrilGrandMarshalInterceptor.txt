module Base
{
	model GavrilGrandMarshalInterceptorBase
	{
		mesh = vehicles/Vehicles_GavrilGrandMarshalPolice,
		shader = vehicle_norandom_multiuv,
		invertX = FALSE,
		scale = 0.410,
	}
	model GavrilGrandMarshalInterceptorWheelFL
	{
		mesh = vehicles/Vehicles_GavrilGrandMarshalPoliceWheel,
		texture = vehicles/Gavril_WheelE,
		scale = 0.44,
	}
	model GavrilGrandMarshalInterceptorWheelFR
	{
		mesh = vehicles/Vehicles_GavrilGrandMarshalPoliceWheel,
		texture = vehicles/Gavril_WheelE,
		scale = 0.44,
	}
	model GavrilGrandMarshalInterceptorWheelRL
	{
		mesh = vehicles/Vehicles_GavrilGrandMarshalPoliceWheel,
		texture = vehicles/Gavril_WheelE,
		scale = 0.44,
	}
	model GavrilGrandMarshalInterceptorWheelRR
	{
		mesh = vehicles/Vehicles_GavrilGrandMarshalPoliceWheel,
		texture = vehicles/Gavril_WheelE,
		scale = 0.44,
	}
	vehicle GavrilGrandMarshalInterceptor
	{
		mechanicType = 3,
		engineRepairLevel = 5,
		playerDamageProtection = 1.1,
		offRoadEfficiency = 0.9,

		model
		{
			file = GavrilGrandMarshalInterceptorBase,
			scale = 1.7800,
			offset = 0.0000 0.2809 0.0000,
		}

		skin
		{
			texture = vehicles/GavrilGrandMarshalInterceptorA_Shell,
		}

		skin
		{
			texture = vehicles/GavrilGrandMarshalInterceptorB_Shell,
		}

		skin
		{
			texture = vehicles/GavrilGrandMarshalInterceptorC_Shell,
		}

		skin
		{
			texture = vehicles/GavrilGrandMarshalInterceptorD_Shell,
		}

		textureMask = vehicles/GavrilInterceptorMask,
		textureLights = vehicles/GavrilInterceptorLights,
		textureDamage1Overlay = vehicles/GavrilBlood,
		textureDamage2Overlay = vehicles/GavrilBlood,
		textureDamage1Shell = vehicles/GavrilDamageLight,
		textureDamage2Shell = vehicles/GavrilDamageHeavy,
		textureRust = vehicles/Blank_Placeholder,

		lightbar
		{
			soundSiren = VehicleSiren,
			leftCol = 0;0;1,
			rightCol = 0;0;1,
		}

		sound
		{
			engine = VehicleEngineSportsCar,
			engineStart = VehicleEngineSportsCar,
			engineTurnOff = VehicleEngineSportsCar,
			horn = VehicleHornSportsCar,
			ignitionFail = VehicleIgnitionFailSportsCar,
		}

		extents = 0.9551 0.6742 2.6517,
		mass = 1100,
		physicsChassisShape = 0.9551 0.6404 2.6517,
		centerOfMassOffset = 0.0000 0.3034 -0.0112,
		shadowExtents = 0.9589 2.7297,
		shadowOffset = 0.0000 -0.0006,
		engineForce = 5800,
		maxSpeed = 120f,
		engineLoudness = 75,
		engineQuality = 75,
		brakingForce = 80,
		gearRatioCount = 4,
		gearRatioR = 3.8,
		gearRatio1 = 3.8,
		gearRatio2 = 2.4,
		gearRatio3 = 1.5,
		gearRatio4 = 1.2,
		extentsOffset = 0.5 0.5,
		stoppingMovementForce = 4.0f,
		rollInfluence = 1.0f,
		steeringIncrement = 0.04,
		steeringClamp = 0.3,
		suspensionStiffness = 35,
		suspensionCompression = 3.53,
		suspensionDamping = 2.88,
		maxSuspensionTravelCm = 10,
		suspensionRestLength = 0.20f,
		wheelFriction = 1.5f,
		frontEndHealth = 220,
		rearEndHealth = 150,
		seats = 4,

		wheel FrontLeft
		{
			front = true,
			offset = 0.3876 -0.3090 0.8371,
			radius = 0.16f,
			width = 0.2f,
		}

		wheel FrontRight
		{
			front = true,
			offset = -0.3876 -0.3090 0.8371,
			radius = 0.16f,
			width = 0.2f,
		}

		wheel RearLeft
		{
			front = false,
			offset = 0.3876 -0.3090 -0.6685,
			radius = 0.16f,
			width = 0.2f,
		}

		wheel RearRight
		{
			front = false,
			offset = -0.3876 -0.3090 -0.6685,
			radius = 0.16f,
			width = 0.2f,
		}

		template = PassengerSeat4,

		passenger FrontLeft
		{
			position inside
			{
				offset = 0.1910 -0.0843 0.0281,
				rotate = 0.0000 0.0000 0.0000,
			}

			position outside
			{
				offset = 0.6348 -0.4831 0.1404,
				rotate = 0.0000 0.0000 0.0000,
				area = SeatFrontLeft,
			}

			switchSeat RearLeft
			{
			}

			switchSeat RearRight
			{
			}
		}

		passenger FrontRight
		{
			position inside
			{
				offset = -0.1910 -0.0843 0.0281,
				rotate = 0.0000 0.0000 0.0000,
			}

			position outside
			{
				offset = -0.6348 -0.4831 0.1404,
				rotate = 0.0000 0.0000 0.0000,
				area = SeatFrontRight,
			}

			switchSeat RearLeft
			{
			}

			switchSeat RearRight
			{
			}
		}

		passenger RearLeft
		{
			position inside
			{
				offset = 0.1910 -0.0843 -0.4382,
				rotate = 0.0000 0.0000 0.0000,
			}

			position outside
			{
				offset = 0.6348 -0.4831 -0.3427,
				rotate = 0.0000 0.0000 0.0000,
				area = SeatRearLeft,
			}

			switchSeat FrontLeft
			{
			}

			switchSeat FrontRight
			{
			}
		}

		passenger RearRight
		{
			position inside
			{
				offset = -0.1910 -0.0843 -0.4382,
				rotate = 0.0000 0.0000 0.0000,
			}

			position outside
			{
				offset = -0.6404 -0.4831 -0.3427,
				rotate = 0.0000 0.0000 0.0000,
				area = SeatRearRight,
			}

			switchSeat FrontLeft
			{
			}

			switchSeat FrontRight
			{
			}
		}

		area Engine
		{
			xywh = 0.0000 1.6180 0.9663 0.5843,
		}

		area TruckBed
		{
			xywh = 0.0000 -1.6180 0.9663 0.5843,
		}

		area SeatFrontLeft
		{
			xywh = 0.7022 0.1910 0.4494 0.5056,
		}

		area SeatFrontRight
		{
			xywh = -0.7022 0.1910 0.4494 0.5056,
		}

		area SeatRearLeft
		{
			xywh = 0.7022 -0.2697 0.4494 0.5056,
		}

		area SeatRearRight
		{
			xywh = -0.7022 -0.2697 0.4494 0.5056,
		}

		area GasTank
		{
			xywh = 0.7022 -0.9270 0.4494 0.4494,
		}

		area TireFrontLeft
		{
			xywh = 0.7022 0.8764 0.4494 0.4494,
		}

		area TireFrontRight
		{
			xywh = -0.7022 0.8764 0.4494 0.4494,
		}

		area TireRearLeft
		{
			xywh = 0.7022 -0.6910 0.4494 0.4494,
		}

		area TireRearRight
		{
			xywh = -0.7022 -0.6910 0.4494 0.4494,
		}

		template = Trunk/part/TruckBed,
		template = TrunkDoor,

		part TruckBed
		{
			itemType = Base.NormalTrunk,

			container
			{
				capacity = 58,
			}
		}

		template = Seat/part/SeatFrontLeft,
		template = Seat/part/SeatFrontRight,
		template = Seat/part/SeatRearLeft,
		template = Seat/part/SeatRearRight,

		part Seat*
		{
			table install
			{
				skills = Mechanics:2,
			}

			table uninstall
			{
				skills = Mechanics:2,
			}
		}

		part GloveBox
		{
			area = SeatFrontRight,
			itemType = Base.GloveBox,
			mechanicRequireKey = true,

			container
			{
				capacity = 8,
				test = Vehicles.ContainerAccess.GloveBox,
			}

			lua
			{
				create = Vehicles.Create.Default,
			}
		}

		template = GasTank,
		template = Battery,
		template = Engine,
		template = Muffler,
		template = EngineDoor,

		part Heater
		{
			category = engine,

			lua
			{
				update = Vehicles.Update.Heater,
			}
		}

		part PassengerCompartment
		{
			category = nodisplay,

			lua
			{
				update = Vehicles.Update.PassengerCompartment,
			}
		}

		template = Windshield/part/Windshield,
		template = Windshield/part/WindshieldRear,
		template = Window/part/WindowFrontLeft,
		template = Window/part/WindowFrontRight,
		template = Window/part/WindowRearLeft,
		template = Window/part/WindowRearRight,

		part Window*
		{
			anim Open
			{
				sound = VehicleWindowElectricOpen,
			}

			anim Close
			{
				sound = VehicleWindowElectricClose,
			}
		}

		template = Door/part/DoorFrontLeft,
		template = Door/part/DoorFrontRight,
		template = Door/part/DoorRearLeft,
		template = Door/part/DoorRearRight,
		template = Tire,

		part TireFrontLeft
		{
			model InflatedTirePlusWheel
			{
				file = GavrilGrandMarshalInterceptorWheelFL,
			}
		}

		part TireFrontRight
		{
			model InflatedTirePlusWheel
			{
				file = GavrilGrandMarshalInterceptorWheelFR,
			}
		}

		part TireRearLeft
		{
			model InflatedTirePlusWheel
			{
				file = GavrilGrandMarshalInterceptorWheelRL,
			}
		}

		part TireRearRight
		{
			model InflatedTirePlusWheel
			{
				file = GavrilGrandMarshalInterceptorWheelRR,
			}
		}

		template = Brake,
		template = Suspension,
		template = Headlight,
		template = Radio_HAM,

		attachment trailer
		{
			offset = 0.0000 -0.2360 -1.3202,
			rotate = 0.0000 0.0000 0.0000,
			zoffset = -1.0000,
		}

		attachment trailerfront
		{
			offset = 0.0000 -0.2640 1.2753,
			rotate = 0.0000 0.0000 0.0000,
			zoffset = 1.0000,
		}
	}
}
